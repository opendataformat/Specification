iques
questab <- paste0("questtab",iques)
questab
questabout <- assign("output$ques",iques)
questabout
questabout <- append("output$ques",iques)
questabout
obj<-list(a=1,b=2)
obj
obj[["a"]]
questabout
questabout <- paste0("output$ques",iques)
questabout
questabout[["1"]]
questabout[[1]]
questabout[1]
get(questabout)
DTOutput("quest1")
ouput$quest1 <- DT::renderDataTable(
ques
)
x <- paste0("ques",quesnum)
quesnum <- quesnum + 1
x <- paste0("ques",quesnum)
quesnum <- quesnum + 1
quesnum
quesnum <- 0
quesnum <- quesnum + 1
x <- paste0("ques",quesnum)
x
as.name(paste0(`output$`,x))
as.name(paste0("output$",x))
as.name(paste0("output$",x))
get(y)
y <- as.name(paste0("output$",x))
print(test)
get(y)
y
?lapply
counter <- reactiveValues(countervalue = 1) # Defining & initializing the reactiveValues object
counter$countervalue <- counter$countervalue + 1
output$count <- renderText({
paste("Counter Value is ", counter$countervalue)   # print the latest value stored in the reactiveValues object
})
outputID="count"
output$count <- renderText({
paste("Counter Value is ", counter$countervalue)   # print the latest value stored in the reactiveValues object
})
Output("count")
DTOutput("count")
output$count <- renderText({
paste("Counter Value is ", counter$countervalue)   # print the latest value stored in the reactiveValues object
})
?reactiveValues
values <- reactiveValues()
values$a <- 3
values$a
values[[`a`]]
values[['a']]
isolate(values[['a']])
values <- reactiveValues(a=1, b=2)
isolate(values[['a']])
isolate(values[['b']])
isolate(quesnum)
isolate(y)
values <- reactiveValues(a="test"1)
values <- reactiveValues(a="test")
values
isolate(values)
isolate(values$a)
values <- reactiveValues(a=test)
isolate(values$a)
values <- reactiveValues(a=test)
isolate(values$a)
values <- reactiveValues(a=text)
isolate(values$a)
values <- reactiveValues(a=as.name(text))
isolate(values$a)
values <- reactiveVal(count=1)
values <- reactiveVal(a=1)
values <- reactiveValues(count=1)
isolate(values$count)
values <- reactiveValues(a=values+1)
isolate(values$a)
values <- reactiveValues(a=1)
isolate(values$a)
values <- reactiveValues(a=isolate(values$a)+1)
values
isolate(values$a)
x
x
questtype <- read.csv(file="csv/questionnaire_types.csv")
qtyp <-
DT::datatable(
questtype[1:20,],
caption="questionnaire_types.csv / row 1:20 / June 2021",
filter = list(position = 'top')
)
qtyp
sample <- read.csv(file="csv/sample.csv")
sam <-
DT::datatable(
sample,
caption="samplegroups.csv / June 2021",
filter = list(position = 'top')
)
sam
logdat <- read.csv(file = "csv/logical_datasets.csv")
dat <-
DT::datatable(
logdat[349:369,],
caption="logical_datasets.csv / rows 349:369 / June 2021",
filter = list(position = 'top')
)
dat
questions <- read.csv(file = "csv/questions.csv")
que <-
DT::datatable(
questions[11:30,],
caption="questions.csv from soep-core-2019-hh	questionnaire / rows 11:30 / June 2021",
filter = list(position = 'top')
)
que
concepts <- read.csv(file="csv/concepts.csv")
con <-
DT::datatable(
concepts[1707:1727,],
caption="concepts.csv / rows 1707:1727 / June 2021",
filter = list(position = 'top')
)
con
answers <- read.csv(file="csv/answers.csv")
ans <-
DT::datatable(
answers[114:124,],
caption="answers.csv / rows 114:124 / June 2021",
filter = list(position = 'top')
)
ans
ans <-
DT::datatable(
answers[114:124,],
caption="answers.csv from soep-core-2019-hh / rows 114:124 / June 2021",
filter = list(position = 'top')
)
ans
variables <- read.csv(file = "csv/variables.csv")
var <-
DT::datatable(
variables[1:20,],
caption="variables.csv from bjh dataset / rows 1:20 / June 20211",
filter = list(position = 'top')
)
var
# install.packages("flexdashboard")
# install.packages("DT")
library("shiny")
library("flexdashboard")
library("DT")
options(DT.options =
list(pageLength = 5, bPaginate = TRUE),
filter = list(position = 'top')
)
# file = paste0(pathcsv,"questionnaires.csv")
questionnaires <- read.csv(file = "csv/questionnaires.csv")
ques <-
DT::datatable(
questionnaires[141:160,],
caption="questionnaires.csv / rows 141:160 / June 2021",
filter = list(position = 'top')
)
quesnum <- 0
studies <- read.csv(file = "csv/studies.csv")
stu <-
DT::datatable(
studies,
caption="studies.csv / June 2021",
filter = list(position = 'top')
)
periods <- read.csv("csv/periods.csv")
per <-
DT::datatable(
periods[28:37,],
caption="periods.csv / row 28:37 / June 2021",
filter = list(position = 'top')
)
questtype <- read.csv(file="csv/questionnaire_types.csv")
qtyp <-
DT::datatable(
questtype[1:20,],
caption="questionnaire_types.csv / row 1:20 / June 2021",
filter = list(position = 'top')
)
analysis <- read.csv(file="csv/analysis_units.csv")
ana <-
DT::datatable(
analysis,
caption="analysis_units.csv / June 2021",
filter = list(position = 'top')
)
sample <- read.csv(file="csv/sample.csv")
sam <-
DT::datatable(
sample,
caption="samplegroups.csv / June 2021",
filter = list(position = 'top')
)
logdat <- read.csv(file = "csv/logical_datasets.csv")
dat <-
DT::datatable(
logdat[349:369,],
caption="logical_datasets.csv / rows 349:369 / June 2021",
filter = list(position = 'top')
)
questions <- read.csv(file = "csv/questions.csv")
que <-
DT::datatable(
questions[11:30,],
caption="questions.csv from soep-core-2019-hh	questionnaire / rows 11:30 / June 2021",
filter = list(position = 'top')
)
concepts <- read.csv(file="csv/concepts.csv")
con <-
DT::datatable(
concepts[1707:1727,],
caption="concepts.csv / rows 1707:1727 / June 2021",
filter = list(position = 'top')
)
answers <- read.csv(file="csv/answers.csv")
ans <-
DT::datatable(
answers[114:124,],
caption="answers.csv from soep-core-2019-hh / rows 114:124 / June 2021",
filter = list(position = 'top')
)
variables <- read.csv(file = "csv/variables.csv")
var <-
DT::datatable(
variables[1:20,],
caption="variables.csv from bjh dataset / rows 1:20 / June 20211",
filter = list(position = 'top')
)
conceptual <- read.csv(file = "csv/conceptual_datasets.csv")
conceptual
View(conceptual)
condat <-
DT::datatable(
conceptual[1:20,],
caption="conceptual_datasets.csv  / rows 1:20 / June 2021",
filter = list(position = 'top')
)
condat
condat
minedition <- read.csv(file = "csv/minedition_types.csv")
minedition <- read.csv(file = "csv/minedition_types.csv")
minedition
View(minedition)
min <-
DT::datatable(
minedition,
caption="minedition_types.csv / June 2021",
filter = list(position = 'top')
)
View(min)
DT::dataTableOutput("min1")
output$min1 <- DT::renderDataTable(
min, server=TRUE
)
DT::dataTableOutput("per3")
output$per3 <- DT::renderDataTable(
per, server=TRUE
)
## dependencies
## -----------------------------------------
# install.packages("flexdashboard")
# install.packages("DT")
library("shiny")
library("flexdashboard")
library("DT")
## paths
## -----------------------------------------
pathcsv <- "../M01-1-d-CSV-soep/"
pathimg <- "/svg/"
## DT global options
## -----------------------------------------
options(DT.options =
list(pageLength = 5, bPaginate = TRUE),
filter = list(position = 'top')
)
## table objects
## -----------------------------------------
questionnaires <- read.csv(file = "csv/questionnaires.csv")
ques <-
DT::datatable(
questionnaires[141:160,],
caption="questionnaires.csv / rows 141:160 / June 2021",
filter = list(position = 'top')
)
quesnum <- 0
studies <- read.csv(file = "csv/studies.csv")
stu <-
DT::datatable(
studies,
caption="studies.csv / June 2021",
filter = list(position = 'top')
)
periods <- read.csv("csv/periods.csv")
per <-
DT::datatable(
periods[28:37,],
caption="periods.csv / row 28:37 / June 2021",
filter = list(position = 'top')
)
questtype <- read.csv(file="csv/questionnaire_types.csv")
qtyp <-
DT::datatable(
questtype[1:20,],
caption="questionnaire_types.csv / row 1:20 / June 2021",
filter = list(position = 'top')
)
analysis <- read.csv(file="csv/analysis_units.csv")
ana <-
DT::datatable(
analysis,
caption="analysis_units.csv / June 2021",
filter = list(position = 'top')
)
sample <- read.csv(file="csv/sample.csv")
sam <-
DT::datatable(
sample,
caption="samplegroups.csv / June 2021",
filter = list(position = 'top')
)
logdat <- read.csv(file = "csv/logical_datasets.csv")
dat <-
DT::datatable(
logdat[349:369,],
caption="logical_datasets.csv / rows 349:369 / June 2021",
filter = list(position = 'top')
)
questions <- read.csv(file = "csv/questions.csv")
que <-
DT::datatable(
questions[11:30,],
caption="questions.csv from soep-core-2019-hh	questionnaire / rows 11:30 / June 2021",
filter = list(position = 'top')
)
concepts <- read.csv(file="csv/concepts.csv")
con <-
DT::datatable(
concepts[1707:1727,],
caption="concepts.csv / rows 1707:1727 / June 2021",
filter = list(position = 'top')
)
answers <- read.csv(file="csv/answers.csv")
ans <-
DT::datatable(
answers[114:124,],
caption="answers.csv from soep-core-2019-hh / rows 114:124 / June 2021",
filter = list(position = 'top')
)
variables <- read.csv(file = "csv/variables.csv")
var <-
DT::datatable(
variables[1:20,],
caption="variables.csv from bjh dataset / rows 1:20 / June 2021",
filter = list(position = 'top')
)
conceptual <- read.csv(file = "csv/conceptual_datasets.csv")
condat <-
DT::datatable(
conceptual[1:20,],
caption="conceptual_datasets.csv  / rows 1:20 / June 2021",
filter = list(position = 'top')
)
minedition <- read.csv(file = "csv/minedition_types.csv")
min <-
DT::datatable(
minedition,
caption="minedition_types.csv / June 2021",
filter = list(position = 'top')
)
categories <- read.csv(file="csv/variable_categories.csv")
categories
View(categories)
varcat <-
DT::datatable(
categories[6:26,],
caption="variable_categories.csv from bjh dataset / rows 6:26 / June 2021",
filter = list(position = 'top')
)
varcat
varcat <-
DT::datatable(
categories[1:20,],
caption="variable_categories.csv from bjh dataset / rows 6:26 / June 2021",
filter = list(position = 'top')
)
version <- read.csv(file="csv/version.csv")
ver <-
DT::datatable(
version,
caption="version / example / June 2021",
filter = list(position = 'top')
)
ver
varcat
distribution <- read.csv("csv/datasets_distributions.csv")
distribution
View(distribution)
distribution <- read.csv("csv/datasets_distributions.csv")
distribution
dis <-
DT::datatable(
distribution,
caption="datasets_distributions.csv / rows 67,209,573,718,1174,1333,1808 / June 2021",
filter = list(position = 'top')
)
distribution <- read.csv("csv/datasets_distributions.csv")
dis <-
DT::datatable(
distribution[1:7,],
caption="datasets_distributions.csv / rows 67,209,573,718,1174,1333,1808 / June 2021",
filter = list(position = 'top')
)
periodssamples <- read.csv("csv/periods_samplegroups.csv")
periodsamples <- read.csv("csv/period_samplegroups.csv")
persam <-
DT::datatable(
periodsamples[1:20,],
caption="period_samplegroups.csv / rows 1:20 / June 2021",
filter = list(position = 'top')
)
getwd()
install.packages("flexdashboard")
install.packages("DT")
library("DT")
DT::dataTableOutput("ques1")
output$ques1 <- DT::renderDataTable(
ques, server = TRUE
?DT
??DT
library("DT")
?csv
??csv
data <- read.csv("xml_profile", header = TRUE, sep=",")
setwd("/home/claudia/Dropbox/Berlin/TA3.M5/opendata/M1-Spezifikation/external/profile/")
data <- read.csv("xml_profile", header = TRUE, sep=",")
data <- read.csv("xml_profile.csv", header = TRUE, sep=",")
data
DT::dataTableOutput("data")
output$data <- DT::renderDataTable(
data, server=TRUE)
DT::dataTableOutput("data")
datatable(data)
data
library("rmarkdown")
paged_table(data)
paged_table(data, options = list(rows.print = 15))
paged_table(data, options = list(rows.print = 20))
paged_table(data, options = list(rows.print = 35, cols.print=3))
library("knitr")
kable("data")
kable(head(data))
library("DT")
library("rmarkdown")
library("knitr")
kable(head(data))
data <- read.csv("xml_profile.csv", header = TRUE, sep=",")
#datatable(data)
# paged_table(data, options = list(rows.print = 35, cols.print=3))
datatable(data)
library("DT")
data <- read.csv("csv_xml_profile.csv",
header = TRUE,
sep=","
)
datatable(data,
extensions= 'FixedHeader',
options=list(pageLength=50, fixedHeader=TRUE)
) %>% formatStyle(
'description',
backgroundColor = 'yellow'
)
library("DT")
data <- read.csv("csv_xml_profile.csv",
header = TRUE,
sep=","
)
datatable(data,
extensions= 'FixedHeader',
options=list(pageLength=50, fixedHeader=TRUE)
%>% formatStyle(
'description',
fontWeight = "bold"
)
library("DT")
data <- read.csv("csv_xml_profile.csv",
header = TRUE,
sep=","
)
datatable(data,
extensions= 'FixedHeader',
options=list(pageLength=50, fixedHeader=TRUE)
) %>%
formatStyle("description", fontWeight = "bold")
??styleFormat
??formatStyle
??datatable
??datatable()
??DT
